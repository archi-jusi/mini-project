AWSTemplateFormatVersion: 2010-09-09
Description: >
  Create an Amazon EC2 instance and a Mysql DB. The AMI is chosen based
  on the region in which the stack is run. A Read Replica is created automatically and
  a MultiAZ can be created optionally.

Parameters:
  #Parameter for EC2 Instance
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceTypeEC2:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium]
    ConstraintDescription: must be a valid EC2 instance type.

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

    # Parameter for Database Instance
  #https://aws.amazon.com/rds/mysql/instance-types/
  InstanceTypeDB:
    Description: WebServer DB instance type
    Type: String
    Default: db.t2.micro
    AllowedValues: [db.t2.micro, db.t2.small, db.t2.medium]
    ConstraintDescription: must be a valid Mysql instance type
  
  DBAllocatedStorage:
    Default: '20'
    Type: Number
    Description: The size of the database (Gb)
    MinValue: '20'
    MaxValue: '40'
    ConstraintDescription: must be between 20 and 40Gb.
  
  DBName:
    Default: MyAmazingDB
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.

  
  # replace with parameter store if time
  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  
  DBPassword:
    NoEcho: 'true'
    Description: "The database admin account password"
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.

  MultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.

  ReplicaDBCondition:
    Description: ReplicaDB database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false
# To change to deploy DB
  DeployDBCondition:
    Description: Master database
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false

Conditions:
  Deploy-ReplicaDB: !Equals
    - !Ref ReplicaDBCondition
    - true
  # If only need to deploy DB For testing purpose
  Deploy-MasterDB: !Equals
    - !Ref DeployDBCondition
    - true

  Deploy-All-DB: !And
    - !Condition Deploy-MasterDB
    - !Condition Deploy-ReplicaDB

Resources:
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: MasterDB
    Properties:
      InstanceType: !Ref 'InstanceTypeEC2'
      SecurityGroups: [!Ref 'InstanceSecurityGroupEC2']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
      UserData:
        Fn::Base64: 
          !Sub |
            #cloud-config
            write_files:
              - path: test.txt
                content: "97LEDKYGOF6C56Q4GYR"
            yum_repos:
              mariadb:
                baseurl: http://yum.mariadb.org/10.5/centos7-amd64
                gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
                gpgcheck: true
                enabled: true
                name: Package for MariaDB - fork Mysql
            package_update: true
            package_upgrade: true
            package_reboot_if_required: true
            packages:
              - MariaDB-client

            runcmd:
              - echo "[client]" >> "config.cnf"
              - echo "user=${DBUser}" >> "config.cnf"
              - echo "password=${DBPassword}" >> "config.cnf"
              - echo "host=${MasterDB.Endpoint.Address}" >> "config.cnf"
              - echo "database=${DBName}" >> "config.cnf"
              - mysql --defaults-file=/config.cnf -e "CREATE TABLE CandidateTest2(description TEXT)"
              - rm -f config.cnf

      Tags:
        -
          Key: Name
          Value: !Sub '${AWS::StackName}-ec2'
    

  InstanceSecurityGroupEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'

  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: Deploy-MasterDB
    Properties:
      GroupDescription: Open database for access from the Instance Only
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupName: !Ref 'InstanceSecurityGroupEC2'
  
  MasterDB:
    Type: AWS::RDS::DBInstance
    Condition: Deploy-MasterDB
    Properties:
      DBName: !Ref 'DBName'
      AllocatedStorage: !Ref 'DBAllocatedStorage'
      DBInstanceClass: !Ref 'InstanceTypeDB'
      Engine: MySQL
      MasterUsername: !Ref 'DBUser'
      # require access on parameter store on parameter 
      MasterUserPassword: !Ref 'DBPassword'
      MultiAZ: !Ref 'MultiAZ'
      Tags:
      - Key: Name
        Value: Master Database
      VPCSecurityGroups: 
        - !GetAtt [DBEC2SecurityGroup, GroupId]

  ReplicaDB:
    Type: AWS::RDS::DBInstance
    Condition: Deploy-All-DB
    Properties:
      SourceDBInstanceIdentifier: !Ref 'MasterDB'
      DBInstanceClass: !Ref 'InstanceTypeDB'
      Tags:
      - Key: Name
        Value: Read Replica SuperDB

Outputs:
  InstanceIdEC2:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZInstanceIdEC2:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNSInstanceIdEC2:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIPInstanceIdEC2:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
  MasterEndpointAddress:
    Description: Endpoint to connect to Master
    Value: !GetAtt [MasterDB, Endpoint.Address]
    #Condition: Deploy-MasterDB
  DatabaseName:
    Description: Name of the Database
    Value: !Ref 'DBName'
  ReplicaEndpointAddress:
    Description: Endpoint to connect to Replica DB
    Value: !GetAtt [ReplicaDB, Endpoint.Address]
    Condition: Deploy-ReplicaDB