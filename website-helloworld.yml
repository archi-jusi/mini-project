AWSTemplateFormatVersion: '2010-09-09'
Description: "Static Website using cloudfront and S3"

Parameters:
  S3BucketNameWeb:
    Type: String
    Default: "jusi-micro-project"
    MinLength: 3
    MaxLength: 63

Resources:
  S3BucketLogging:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub bucket-${AWS::AccountId}-${AWS::Region}-logging-webapp
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      #VersioningConfiguration:
      #  Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  S3BucketWebHelloWorld:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref S3BucketNameWeb
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      VersioningConfiguration:
        Status: Enabled
      #LoggingConfiguration:
      #  DestinationBucketName: !Ref S3BucketLogging
      #  LogFilePrefix: WebApp


  S3HostingBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3BucketNameWeb
        PolicyDocument:
          Statement:
            - Action:
                - 's3:GetObject'
              Effect: Allow
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3BucketNameWeb
                  - /*
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

    # Configure CloudFront
  CloudFrontDistributionWebApp:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403 
            ResponseCode: 404
            ResponsePagePath: 'error.html'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          # TTL very low for my test
          DefaultTTL: 10 # in seconds
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 20 # in seconds
          MinTTL: 10 # in seconds
          TargetOriginId: "S3Origin"
          ViewerProtocolPolicy: 'allow-all'
        # This DefaultRootObject configuration is not enough.
        DefaultRootObject: 'index.html'
        Comment: "CDN for Micro-WebApp"
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: "S3Origin"
            DomainName: !GetAtt S3BucketWebHelloWorld.DomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        PriceClass: PriceClass_100
        # Use of Iso Code to restrict request from Italy and Malta only
        # https://www.iso.org/obp/ui/#search/code/
        Restrictions:
          GeoRestriction:
            RestrictionType: whitelist
            Locations:
            - IT
            - MT


  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3BucketWebHelloWorld
  

Outputs:
  WebSiteUrlWebApp:
    Description: 'URL for website hosted on S3'
    Value: !GetAtt S3BucketWebHelloWorld.WebsiteURL

  LoggingBucketName:
    Description: 'Name of the bucket for logging'
    Value: !Ref S3BucketLogging

  DomainNameBucket:
    Description: 'Domain Name of the bucket'
    Value: !GetAtt S3BucketWebHelloWorld.DomainName